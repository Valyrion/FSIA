CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

SET(VERSION_LOW 1)
SET(VERSION_UP 0)

SET(PROJ_NAME mlearn)
SET(EXEC_NAME "${PROJ_NAME}")

PROJECT(${PROJ_NAME})
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/inc)

SET(CMAKE_CXX_FLAGS "-std=c++11 -Wall")

FILE(GLOB_RECURSE HDRS "${PROJECT_SOURCE_DIR}/inc/*.hpp" "${PROJECT_SOURCE_DIR}/inc/*.h")
FILE(GLOB_RECURSE SRCS "${PROJECT_SOURCE_DIR}/src/*.cpp" "${PROJECT_SOURCE_DIR}/src/*.c")

SET(EXECUTABLE_NAME ${EXEC_NAME})
ADD_EXECUTABLE(${EXECUTABLE_NAME} ${SRCS} ${HDRS})
SET(EXECUTABLE_OUTPUT_PATH  ${PROJECT_SOURCE_DIR}/bin)

SET_TARGET_PROPERTIES(${EXECUTABLE_NAME} PROPERTIES DEBUG_POSTFIX _d)

SET(CMAKE_MODULE_PATH "/fsia/programa/cmk/" ${CMAKE_MODULE_PATH})

SET(SFML_ROOT "/sfml-21/")
FIND_PACKAGE(SFML 2.1 REQUIRED system window graphics network audio)
IF(SFML_FOUND)
	INCLUDE_DIRECTORIES(${SFML_INCLUDE_DIR})
	TARGET_LINK_LIBRARIES(${EXECUTABLE_NAME} ${SFML_LIBRARIES})
ENDIF()

FIND_PACKAGE(Threads)
TARGET_LINK_LIBRARIES(${EXECUTABLE_NAME} ${CMAKE_THREAD_LIBS_INIT})

#FIND_LIBRARY(SFMIDI sfMidi)
#TARGET_LINK_LIBRARIES(${EXECUTABLE_NAME} ${SFMIDI})
#FIND_LIBRARY(FSYNTH fluidsynth)
#TARGET_LINK_LIBRARIES(${EXECUTABLE_NAME} ${FSYNTH})
